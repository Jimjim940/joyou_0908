<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="tw.leonchen"/>
    <mvc:annotation-driven/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- <bean id="workerDao" class="tw.leonchen.model.WorkerDAO"/> -->

	<bean id="worker1" class="tw.leonchen.model.Worker">
		<property name="id" value="101" />
		<property name="name" value="allen" />
		<property name="title" value="pg" />
	</bean>

	<bean id="worker2" class="tw.leonchen.model.Worker">
		<property name="id" value="102" />
		<property name="name" value="neon" />
		<property name="title" value="sa" />
	</bean>

	<!-- <bean id="logProvider" class="tw.leonchen.util.LogProvider" /> <bean 
		id="logProvider1" class="tw.leonchen.util.LogProvider" /> -->

	<bean id="loginDao" class="tw.leonchen.model.LoginDAO" />

	<bean id="loginService1" class="tw.leonchen.model.LoginService">
		<property name="loginDao" ref="loginDao" />
	</bean>

	<bean id="loginService2" class="tw.leonchen.model.LoginService">
		<constructor-arg ref="loginDao" />
	</bean>

	<bean id="profiles1" class="tw.leonchen.model.Profiles">
		<property name="userName" value="mary" />
	</bean>

	<bean id="profiles6" class="tw.leonchen.model.Profiles"
		p:userName="michelle" />

	<bean id="profiles2" class="tw.leonchen.model.Profiles">
		<constructor-arg value="julia" />
	</bean>

	<bean id="profiles3" class="tw.leonchen.model.Profiles">
		<constructor-arg type="java.lang.String" value="kitty" />
		<constructor-arg type="int" value="30" />
	</bean>

	<bean id="myDate" class="java.util.Date" />

	<bean id="profiles4" class="tw.leonchen.model.Profiles">
		<constructor-arg ref="myDate" />
	</bean>

	<bean id="profiles5" class="tw.leonchen.model.Profiles">
		<constructor-arg>
			<list>
				<ref bean="profiles1" />
				<ref bean="profiles2" />
				<ref bean="profiles3" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="teslaTruck"
		class="tw.leonchen.model.TruckBeanStaticFactory"
		factory-method="getTruckBean">
		<constructor-arg value="1" />
	</bean>

	<bean id="ferrariTruck"
		class="tw.leonchen.model.TruckBeanStaticFactory"
		factory-method="getTruckBean">
		<constructor-arg value="2" />
	</bean>

	<bean id="truckBeanFactory"
		class="tw.leonchen.model.TruckBeanFactory">
		<property name="map">
			<map>
				<entry key="1">
					<bean class="tw.leonchen.model.TruckBean">
						<property name="id" value="5" />
						<property name="brand" value="toyota" />
					</bean>
				</entry>
				<entry key="2">
					<bean class="tw.leonchen.model.TruckBean">
						<property name="id" value="6" />
						<property name="brand" value="nissan" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="toyotaBean" factory-bean="truckBeanFactory"
		factory-method="getTruckBean">
		<constructor-arg value="1" />
	</bean>

	<bean id="nissanBean" factory-bean="truckBeanFactory"
		factory-method="getTruckBean">
		<constructor-arg value="2" />
	</bean>

	<bean id="lifecycleBean" class="tw.leonchen.model.TruckBean"
		init-method="init" destroy-method="destroy" scope="singleton" />

	<!-- <bean id="props" class="org.springframework.beans.factory.config.PropertiesFactoryBean"> 
		<property name="location"> <value>classpath:tree.properties</value> </property> 
		</bean> -->
	<!-- <bean id="sqlserverdataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/> 
		<property name="url" value="jdbc:sqlserver://localhost:1433;databaseName=LeonPower"/> 
		<property name="username" value="sa"/> <property name="password" value="P@ssw0rd"/> 
		</bean> -->

	<bean id="sqlserverdataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName"
			value="java:comp/env/connectSQLServerJdbc/HibernateService" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="sqlserverdataSource" />
		<property name="packagesToScan" value="tw.leonchen.model"/>
		<property name="hibernateProperties">
		   <props>
		      <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
		      <prop key="hibernate.show_sql">true</prop>
		      <prop key="hibernate.format_sql">true</prop>
		      <prop key="hibernate.current_session_context_class">thread</prop>
		   </props>
		</property>
		<property name="mappingResources">
		   <list>
		      <value>tw/leonchen/model/HouseBean.hbm.xml</value>
		   </list>
		</property>
	</bean>
	
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	   <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
     <!-- 
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="sqlserverdataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>
     -->
	<bean id="houseBeanDao" class="tw.leonchen.model.HouseBeanDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="houseBeanService"
		class="tw.leonchen.model.HouseBeanService">
		<constructor-arg ref="houseBeanDao" />
	</bean>


	<bean id="houseDao" class="tw.leonchen.model.HouseDAO">
		<constructor-arg ref="sqlserverdataSource" />
	</bean>

	<bean id="houseService" class="tw.leonchen.model.HouseService">
		<constructor-arg ref="houseDao" />
	</bean>


</beans>















